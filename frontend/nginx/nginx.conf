# Frontend
server {
    listen 80;

    server_name pingcycle.org www.pingcycle.org;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        alias /var/www/certbot;
    }

    location / {
      root   /usr/share/nginx/html;
      index  index.html index.htm;
      try_files $uri $uri/ /index.html =404;
    }

    # location / {
    #     return 301 https://pingcycle.org$request_uri;
    # }

}

# server {
#     listen 443 default_server ssl http2;

#     server_name pingcycle.org;

#     ssl_certificate /etc/nginx/ssl/live/pingcycle.org/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/pingcycle.org/privkey.pem;
    
#     # Reverse proxy for frontend (if using a single-page app or static site)
#     location / {
#         proxy_pass http://frontend:80;  # Forward requests to the frontend container
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# # Backend
# server {
#     listen 80;
#     listen [::]:80;

#     server_name core.pingcycle.org;
#     server_tokens off;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     location / {
#         return 301 https://core.pingcycle.org$request_uri;
#     }
# }

# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;

#     server_name core.pingcycle.org;

#     ssl_certificate /etc/nginx/ssl/live/core.pingcycle.org/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/core.pingcycle.org/privkey.pem;

#     location /api {
#         proxy_pass http://django:8000;  # Forward requests to the Django container
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }