services:
  django: &django
    build:
      context: ./backend
      dockerfile: ./compose/production/Dockerfile
    image: pingcycle_prod_django
    container_name: pingcycle_prod_django
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
      APP_DB: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - /etc/pingcycle_config.json:/etc/pingcycle_config.json
    expose:
      - 8000
    command: /start
    networks:
      - pingcycle_net

  postgres:
    image: postgres:16
    container_name: pingcycle_prod_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
      APP_DB: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pingcycle_prod_postgres_data:/var/lib/postgresql/data
      - ./db-scripts/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    networks:
      - pingcycle_net

  redis:
    image: docker.io/redis:6
    container_name: pingcycle_prod_redis
    volumes:
      - pingcycle_prod_redis_data:/data
    networks:
      - pingcycle_net

  celeryworker:
    <<: *django
    image: pingcycle_prod_celeryworker
    container_name: pingcycle_prod_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker
    networks:
      - pingcycle_net

  celerybeat:
    <<: *django
    image: pingcycle_prod_celerybeat
    container_name: pingcycle_prod_celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat
    networks:
      - pingcycle_net

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    image: pingcycle_prod_frontend
    container_name: "pingcycle_prod_frontend"
    ports:
      - 80:80
      # - 443:443
    environment:
      - VITE_ENV=${FRONTEND_ENV}
      - VITE_API_URL=${FRONTEND_API_URL}
      - VITE_TELEGRAM_BOT_USERNAME=${FRONTEND_TELEGRAM_BOT_USERNAME}
      - VITE_SENTRY_DSN=${FRONTEND_SENTRY_DSN}     
    # depends_on:
    #   - "django"
    volumes:
      # - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
    networks:
      - pingcycle_net

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - pingcycle_net

volumes:
  pingcycle_prod_postgres_data: {}
  pingcycle_prod_postgres_data_backups: {}
  pingcycle_prod_redis_data: {}

networks:
  pingcycle_net:
    driver: bridge